name: CI/CD Pipeline for OpenTelemetry Demo

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_SHA: ${{ github.sha }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Authenticate with Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }} # Docker Hub username
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Verify Docker Login
      run: docker info

    - name: Build and Tag Docker Images with Docker Compose
      run: |
        export TAG=${{ github.sha }}
        export IMAGE_NAME=sagarswagh/opentelemetry-demo
        docker-compose build
        docker-compose push


  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Set up kubectl
        run: |
          aws eks --region us-east-1 update-kubeconfig --name otel-demo-cluster

      - name: Deploy to EKS
        run: |
          kubectl config current-context
          kubectl set image deployment/otel-demo-app otel-demo-app=sagarswagh/opentelemetry-demo:${{ github.sha }}
          kubectl rollout status deployment/otel-demo-app


  rollback:
    runs-on: ubuntu-latest
    if: failure()
    needs: deploy
    steps:
    - name: Rollback to previous stable version
      run: |
        kubectl rollout undo deployment/otel-demo-app
